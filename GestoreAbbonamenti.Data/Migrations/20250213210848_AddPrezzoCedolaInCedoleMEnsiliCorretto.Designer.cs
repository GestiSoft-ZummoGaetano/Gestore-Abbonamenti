// <auto-generated />
using System;
using GestoreAbbonamenti.Data.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestoreAbbonamenti.Data.Migrations
{
    [DbContext(typeof(DbEntities))]
    [Migration("20250213210848_AddPrezzoCedolaInCedoleMEnsiliCorretto")]
    partial class AddPrezzoCedolaInCedoleMEnsiliCorretto
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CedoleMensili", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Anno")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataCedola")
                        .HasColumnType("datetime2");

                    b.Property<long>("FiglioId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Importo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Mese")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NCedola")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FiglioId");

                    b.ToTable("CedoleMensili");
                });

            modelBuilder.Entity("GestoreAbbonamenti.Model.Figlii", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Cognome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataNascita")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Frequenza")
                        .HasColumnType("bit");

                    b.Property<long>("GenitoreId")
                        .HasColumnType("bigint");

                    b.Property<long>("IdScuola")
                        .HasColumnType("bigint");

                    b.Property<string>("Indirizzo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LuogoNascita")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sesso")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GenitoreId");

                    b.HasIndex("IdScuola");

                    b.ToTable("Figli");
                });

            modelBuilder.Entity("GestoreAbbonamenti.Model.Genitori", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Cap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodiceFiscale")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Cognome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataNascita")
                        .HasColumnType("datetime2");

                    b.Property<string>("Iban")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Indirizzo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Localita")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LuogoNascita")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NCivico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sesso")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CodiceFiscale")
                        .IsUnique()
                        .HasFilter("[CodiceFiscale] IS NOT NULL");

                    b.ToTable("Genitori");
                });

            modelBuilder.Entity("GestoreAbbonamenti.Model.Scuole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Citta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CodiceIstituto")
                        .HasColumnType("int");

                    b.Property<decimal?>("DistanzaDalComune")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Istituto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PrezzoCedolaSettimanale")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Scuole");
                });

            modelBuilder.Entity("CedoleMensili", b =>
                {
                    b.HasOne("GestoreAbbonamenti.Model.Figlii", "Figlio")
                        .WithMany("CedoleMensili")
                        .HasForeignKey("FiglioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Figlio");
                });

            modelBuilder.Entity("GestoreAbbonamenti.Model.Figlii", b =>
                {
                    b.HasOne("GestoreAbbonamenti.Model.Genitori", "Genitore")
                        .WithMany("Figli")
                        .HasForeignKey("GenitoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestoreAbbonamenti.Model.Scuole", "Scuola")
                        .WithMany("Figli")
                        .HasForeignKey("IdScuola")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genitore");

                    b.Navigation("Scuola");
                });

            modelBuilder.Entity("GestoreAbbonamenti.Model.Figlii", b =>
                {
                    b.Navigation("CedoleMensili");
                });

            modelBuilder.Entity("GestoreAbbonamenti.Model.Genitori", b =>
                {
                    b.Navigation("Figli");
                });

            modelBuilder.Entity("GestoreAbbonamenti.Model.Scuole", b =>
                {
                    b.Navigation("Figli");
                });
#pragma warning restore 612, 618
        }
    }
}
